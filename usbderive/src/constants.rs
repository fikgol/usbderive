pub(crate) const PKT_HEADER: [u8; 3] = [0xA5, 0x3C, 0x96];
pub(crate) const PKT_ENDER: [u8; 3] = [0x69, 0xC3, 0x5A];

pub(crate) const PV: u8 = 0x10;
pub(crate) const TYPE_SET_BOOT_MODE: u8 = 0xA3;
pub(crate) const TYPE_UPDATE_FW: u8 = 0xAA;
pub(crate) const TYPE_QUERY_INFO: u8 = 0xA4;
pub(crate) const TYPE_PRODUCT_TEST: u8 = 0xAB;
pub(crate) const TYPE_SET_LED: u8 = 0xA6;
pub(crate) const TYPE_SEND_OPCODE: u8 = 0xA7;
pub(crate) const TYPE_SEND_WORK: u8 = 0xA1;
pub(crate) const TYPE_SET_HWPARAMS: u8 = 0xA2;
pub(crate) const TYPE_REBOOT: u8 = 0xAC;
pub(crate) const TYPE_RECV_NONCE: u8 = 0x51;
pub(crate) const TYPE_RECV_STATE: u8 = 0x52;
pub(crate) const TYPE_RECV_BOOT_MODE: u8 = 0x53;
pub(crate) const TYPE_RECV_INFO: u8 = 0x54;
pub(crate) const TYPE_RECV_OP: u8 = 0x57;
pub(crate) const TYPE_RECV_FWSTATE: u8 = 0x5A;
pub(crate) const TYPE_RECV_TEST_RESULT: u8 = 0x5B;

pub(crate) const ALGO_VARITY: u32 = 4;
pub(crate) const TYPE_OFFSET: usize = 0;

pub(crate) const OPCODE_RR: u8 = 0x10;
pub(crate) const OPCODE_DD: u8 = 0x90;
pub(crate) const OPCODE_HEIGHT: u32 = 0;

pub(crate) const OPCODE: [u8; 288] = [
    0x60, 0xf1, 0xa1, 0x0, 0x40, 0x1f, 0xa7, 0xff, 0x61, 0x33, 0xa3, 0x1, 0x0, 0xf1, 0xa7, 0xff,
    0x10, 0x1f, 0xa8, 0xff, 0xd9, 0x29, 0xb7, 0xbe, 0x40, 0xf2, 0xb0, 0xff, 0x0, 0x2f, 0xa6, 0x2,
    0x0, 0xf3, 0xb1, 0xff, 0x11, 0x3f, 0xa4, 0x3, 0x5c, 0xb0, 0x22, 0x7f, 0x50, 0xf0, 0xb2, 0xff,
    0x20, 0xf, 0xa7, 0x0, 0x0, 0x11, 0xb2, 0xff, 0x0, 0xf2, 0xb2, 0x1, 0x1, 0x2f, 0xb3, 0xff, 0x0,
    0xf3, 0xb3, 0x4, 0x10, 0x3f, 0xa5, 0x2, 0x17, 0x83, 0xfd, 0x5c, 0x0, 0xf0, 0xb0, 0xff, 0x30,
    0xf, 0xa6, 0xff, 0x1, 0x11, 0xb1, 0x5, 0x0, 0xf2, 0xa5, 0xff, 0x0, 0x2f, 0xb5, 0xff, 0x30,
    0xf3, 0xb2, 0x0, 0x0, 0x3f, 0xa4, 0xff, 0x0, 0xf0, 0xb3, 0xff, 0x1, 0xf, 0xb5, 0xff, 0x30,
    0xf2, 0xa6, 0x1, 0x10, 0x2f, 0xa5, 0xff, 0x1f, 0x5e, 0x6c, 0x50, 0x50, 0xf3, 0xa6, 0x2, 0x0,
    0x3f, 0xa6, 0xff, 0x20, 0xf0, 0xa4, 0xff, 0x51, 0xf, 0xa8, 0xff, 0x50, 0xf1, 0xb1, 0xff, 0x10,
    0x1f, 0xa5, 0xff, 0x4f, 0xd5, 0x48, 0xd4, 0x50, 0xf2, 0xa5, 0x1, 0x10, 0x2f, 0xa4, 0xff, 0xc9,
    0x79, 0x95, 0xb4, 0x0, 0xf0, 0xa4, 0xff, 0x41, 0xf, 0xb5, 0xff, 0x50, 0xf1, 0xa8, 0xff, 0x0,
    0x1f, 0xa4, 0xff, 0x20, 0x22, 0xa5, 0x3, 0x20, 0xf0, 0xa7, 0xff, 0x1, 0xf, 0xa6, 0xff, 0x0,
    0xf1, 0xa6, 0xff, 0x20, 0x1f, 0xb0, 0xff, 0x50, 0x33, 0xb3, 0x5, 0x50, 0xf0, 0xa4, 0xff, 0x11,
    0xf, 0xb4, 0xff, 0x84, 0xad, 0x71, 0x2f, 0x0, 0xf1, 0xa4, 0xff, 0x0, 0x1f, 0xa4, 0xff, 0x50,
    0xf2, 0xb5, 0xff, 0x0, 0x2f, 0xb5, 0xff, 0x0, 0xf0, 0xa6, 0xff, 0x51, 0xf, 0xb1, 0xff, 0x20,
    0xf1, 0xa4, 0xff, 0x50, 0x1f, 0xa7, 0xff, 0x50, 0xf0, 0xa8, 0xff, 0x1, 0xf, 0xa4, 0xff, 0x0,
    0x11, 0xa6, 0xff, 0x50, 0xf0, 0xb2, 0x0, 0x51, 0xf, 0xa5, 0x1, 0x50, 0xf1, 0xb0, 0xff, 0x21,
    0x1f, 0xb1, 0x0, 0x31, 0x33, 0xb0, 0x2, 0x1, 0x22, 0xb2, 0x0, 0x1, 0x0, 0xb0, 0xff,
];
